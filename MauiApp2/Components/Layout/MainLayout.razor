@inherits LayoutComponentBase
@inject IDialogService Dialog
@inject GlobalPrefs prefs
@inject PrefStorage storage
<MudThemeProvider @bind-IsDarkMode="@prefs.isDarkMode" Theme="MyCustomTheme" />
@inject NavigationManager navMgr
<MudDialogProvider MaxWidth="MaxWidth.Large" />
<MudSnackbarProvider />




<MudLayout>
    <MudAppBar Elevation="0">
        @if(prefs.datalists != null)
        {

            <MudSelect @bind-Value="prefs.selectedCountry"  Label="Select fast-food" HelperText="String" Style="width: 100px;" Placeholder="Please Select" AdornmentIcon="@Icons.Material.Filled.LocationCity" AdornmentColor="Color.Primary">
                @foreach (var item in prefs.datalists.lists.departures.departure)
                {
                    <MudSelectItem Value="@((int)(item.id))">@((string)item.name)</MudSelectItem>
                }

            </MudSelect>
}
    </MudAppBar>

    <MudAppBar Color="Color.Surface" Bottom="true" style="height:70px !Important ; background-color: var(--mud-palette-surface);">
        <MudIconButton Class="ma-auto" Icon="@Icons.Material.Filled.Search" Variant="Variant.Text" Color="Color.Info" Size="Size.Medium" OnClick="@((e) => OpenDialog())" />
        <MudIconButton Class="ma-auto" Icon="@Icons.Material.Filled.LocalFireDepartment" Variant="Variant.Text" Color="Color.Error" Size="Size.Large" @onclick="@(()=>navMgr.NavigateTo("/"))" />

        <MudIconButton Class="ma-auto" Icon="@Icons.Material.Filled.Person" Variant="Variant.Text" Color="Color.Info" Size="Size.Medium" @onclick="@(()=>navMgr.NavigateTo("/settings"))" />
    </MudAppBar>

    <MudMainContent Style="margin-bottom:80px;">
     
            @Body
      
    </MudMainContent>
</MudLayout>

@code {
    private MudTheme _theme = new();
    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new PaletteLight()
            {
                Primary = Colors.Brown.Default,
                Secondary = Colors.LightGreen.Accent4,
                AppbarBackground = Colors.Brown.Darken4,
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Brown.Default,
            },

        };

    public bool AlarmOn { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        prefs.themeChanged += (bool value) => StateHasChanged();
        prefs.OnDataListsLoaded += (e) => StateHasChanged();
        
       

    }
    private void OpenDialog()
    {
        Dialog.Show<Pages.SearchDialog>("Поиск", new DialogOptions() { Position = DialogPosition.TopCenter });
    }
}